<?php

/**
 * Add field storage configurations.
 */
function du_paragraphs_update_9001() {
  $storage_config_ids = array(
    'field.storage.paragraph.field_cta_inline_headline',
    'field.storage.paragraph.field_du_icon',
    'field.storage.paragraph.field_feature_media_image',
    'field.storage.paragraph.field_heading',
    'field.storage.paragraph.field_hero_image',
    'field.storage.paragraph.field_hero_video',
    'field.storage.paragraph.field_icon_link_link',
    'field.storage.paragraph.field_icon_list_items',
    'field.storage.paragraph.field_icon_list_items_small',
    'field.storage.paragraph.field_image_caption_alignment',
    'field.storage.paragraph.field_image_caption_caption',
    'field.storage.paragraph.field_image_caption_float',
    'field.storage.paragraph.field_image_caption_image',
    'field.storage.paragraph.field_link',
    'field.storage.paragraph.field_list_of_links',
    'field.storage.paragraph.field_list_of_links_layout',
    'field.storage.paragraph.field_list_of_links_style',
    'field.storage.paragraph.field_named_anchor_name',
    'field.storage.paragraph.field_subhead_long',
    'field.storage.paragraph.field_unit_carousel_slide',
    'field.storage.paragraph.field_unit_carousel_title',
    'field.storage.paragraph.field_unit_hero_caption',
    'field.storage.paragraph.field_unit_hero_display',
    'field.storage.paragraph.field_unit_hero_embed',
    'field.storage.paragraph.field_unit_image_type'
  );

  foreach ($storage_config_ids as $config_id) {
    try {
      $config_path = \Drupal::service('extension.list.module')->getPath('du_paragraphs') . '/config/install/' . $config_id . '.yml';

      if (!file_exists($config_path)) {
        \Drupal::logger('du_paragraphs')->error('Configuration file not found: @path', ['@path' => $config_path]);
        continue;
      }

      $data = \Symfony\Component\Yaml\Yaml::parseFile($config_path);

      // Check if the field storage already exists
      $existing_storage = \Drupal::entityTypeManager()
        ->getStorage('field_storage_config')
        ->load($data['id']);

      if ($existing_storage) {
        \Drupal::logger('du_paragraphs')->notice('Field storage already exists: @id', ['@id' => $data['id']]);
        continue;
      }

      // Create a new field storage config entity
      $field_storage_config = \Drupal::entityTypeManager()
        ->getStorage('field_storage_config')
        ->create($data);

      $field_storage_config->save();
      \Drupal::logger('du_paragraphs')->notice('Created field storage: @id', ['@id' => $data['id']]);

    }
    catch (\Exception $e) {
      \Drupal::logger('du_paragraphs')->error('Error creating field storage @id: @error', [
        '@id' => $config_id,
        '@error' => $e->getMessage(),
      ]);
      continue;
    }
  }
}

/**
 * Add field instance configurations.
 */
function du_paragraphs_update_9002() {
  $field_config_ids = array(
    'field.field.paragraph.cta.field_subhead_long',
    'field.field.paragraph.cta_inline.field_cta_inline_headline',
    'field.field.paragraph.cta_inline.field_link',
    'field.field.paragraph.feature_media_image.field_feature_media_image',
    'field.field.paragraph.hero_media.field_hero_image',
    'field.field.paragraph.hero_media.field_hero_video',
    'field.field.paragraph.icon_link.field_du_icon',
    'field.field.paragraph.icon_link.field_icon_link_link',
    'field.field.paragraph.icon_list.field_icon_list_items',
    'field.field.paragraph.icon_list.field_icon_list_items_small',
    'field.field.paragraph.image_with_caption.field_image_caption_alignment',
    'field.field.paragraph.image_with_caption.field_image_caption_caption',
    'field.field.paragraph.image_with_caption.field_image_caption_float',
    'field.field.paragraph.image_with_caption.field_image_caption_image',
    'field.field.paragraph.list_of_links.field_list_of_links',
    'field.field.paragraph.list_of_links.field_list_of_links_layout',
    'field.field.paragraph.list_of_links.field_list_of_links_style',
    'field.field.paragraph.named_anchor.field_named_anchor_name',
    'field.field.paragraph.unit_carousel.field_unit_carousel_slide',
    'field.field.paragraph.unit_carousel.field_unit_carousel_title',
    'field.field.paragraph.unit_hero_media_.field_unit_hero_caption',
    'field.field.paragraph.unit_hero_media_.field_unit_hero_display',
    'field.field.paragraph.unit_hero_media_.field_unit_hero_embed',
    'field.field.paragraph.unit_hero_media_.field_unit_image_type'
  );

  foreach ($field_config_ids as $config_id) {
    try {
      $config_path = \Drupal::service('extension.list.module')->getPath('du_paragraphs') . '/config/install/' . $config_id . '.yml';

      if (!file_exists($config_path)) {
        \Drupal::logger('du_paragraphs')->error('Configuration file not found: @path', ['@path' => $config_path]);
        continue;
      }

      $data = \Symfony\Component\Yaml\Yaml::parseFile($config_path);

      // Check if the field already exists
      $existing_field = \Drupal::entityTypeManager()
        ->getStorage('field_config')
        ->load($data['id']);

      if ($existing_field) {
        \Drupal::logger('du_paragraphs')->notice('Field config already exists: @id', ['@id' => $data['id']]);
        continue;
      }

      // Create a new field config entity
      $field_config = \Drupal::entityTypeManager()
        ->getStorage('field_config')
        ->create($data);

      $field_config->save();
      \Drupal::logger('du_paragraphs')->notice('Created field config: @id', ['@id' => $data['id']]);
    }
    catch (\Exception $e) {
      \Drupal::logger('du_paragraphs')->error('Error creating field config @id: @error', [
        '@id' => $config_id,
        '@error' => $e->getMessage(),
      ]);
      continue;
    }
  }
}

/**
 * Add form and view display configurations.
 */
function du_paragraphs_update_9003() {
  $display_config_ids = array(
    'core.entity_form_display.paragraph.category_link.default',
    'core.entity_view_display.paragraph.category_link.default',
    'core.entity_form_display.paragraph.cta.default',
    'core.entity_view_display.paragraph.cta.default',
    'core.entity_form_display.paragraph.cta_inline.default',
    'core.entity_view_display.paragraph.cta_inline.default',
    'core.entity_form_display.paragraph.feature_media_image.default',
    'core.entity_view_display.paragraph.feature_media_image.default',
    'core.entity_form_display.paragraph.hero_media.default',
    'core.entity_view_display.paragraph.hero_media.default',
    'core.entity_form_display.paragraph.icon_link.default',
    'core.entity_view_display.paragraph.icon_link.default',
    'core.entity_form_display.paragraph.icon_list.default',
    'core.entity_view_display.paragraph.icon_list.default',
    'core.entity_form_display.paragraph.image_with_caption.default',
    'core.entity_view_display.paragraph.image_with_caption.default',
    'core.entity_form_display.paragraph.inset_video.default',
    'core.entity_view_display.paragraph.inset_video.default',
    'core.entity_form_display.paragraph.list_of_links.default',
    'core.entity_view_display.paragraph.list_of_links.default',
    'core.entity_form_display.paragraph.named_anchor.default',
    'core.entity_view_display.paragraph.named_anchor.default',
    'core.entity_form_display.paragraph.unit_carousel.default',
    'core.entity_view_display.paragraph.unit_carousel.default',
    'core.entity_form_display.paragraph.unit_hero_media_.default',
    'core.entity_view_display.paragraph.unit_hero_media_.default'
  );

  foreach ($display_config_ids as $config_id) {
    try {
      $config_path = \Drupal::service('extension.list.module')->getPath('du_paragraphs') . '/config/install/' . $config_id . '.yml';

      if (!file_exists($config_path)) {
        \Drupal::logger('du_paragraphs')->error('Configuration file not found: @path', ['@path' => $config_path]);
        continue;
      }

      $data = \Symfony\Component\Yaml\Yaml::parseFile($config_path);

      // Check if the display config already exists
      $existing_display = \Drupal::configFactory()->get($config_id);
      if (!$existing_display->isNew()) {
        \Drupal::logger('du_paragraphs')->notice('Display config already exists: @id', ['@id' => $config_id]);
        continue;
      }

      // Create the new display config
      \Drupal::configFactory()
        ->getEditable($config_id)
        ->setData($data)
        ->save(TRUE);

      \Drupal::logger('du_paragraphs')->notice('Created display config: @id', ['@id' => $config_id]);
    }
    catch (\Exception $e) {
      \Drupal::logger('du_paragraphs')->error('Error creating display config @id: @error', [
        '@id' => $config_id,
        '@error' => $e->getMessage(),
      ]);
      continue;
    }
  }
}

/**
 * Add new field storage configurations.
 */
function du_paragraphs_update_9004() {
  $storage_config_ids = array(
    'field.storage.paragraph.field_cta_bg_image',
    'field.storage.paragraph.field_hero_caption',
    'field.storage.paragraph.field_hero_embed',
    'field.storage.paragraph.field_icon_list_description',
    'field.storage.paragraph.field_icon_list_heading',
    'field.storage.paragraph.field_icon_list_image',
    'field.storage.paragraph.field_icon_list_link',
    'field.storage.paragraph.field_image_type',
    'field.storage.paragraph.field_inset_video_youtube_video',
    'field.storage.paragraph.field_unit_hero_headline',
    'field.storage.paragraph.field_unit_hero_link',
    'field.storage.paragraph.field_unit_slide_caption',
    'field.storage.paragraph.field_unit_slide_image'
  );

  foreach ($storage_config_ids as $config_id) {
    try {
      $config_path = \Drupal::service('extension.list.module')->getPath('du_paragraphs') . '/config/install/' . $config_id . '.yml';

      if (!file_exists($config_path)) {
        \Drupal::logger('du_paragraphs')->error('Configuration file not found: @path', ['@path' => $config_path]);
        continue;
      }

      $data = \Symfony\Component\Yaml\Yaml::parseFile($config_path);

      // Check if the field storage already exists
      $existing_storage = \Drupal::entityTypeManager()
        ->getStorage('field_storage_config')
        ->load($data['id']);

      if ($existing_storage) {
        \Drupal::logger('du_paragraphs')->notice('Field storage already exists: @id', ['@id' => $data['id']]);
        continue;
      }

      // Create a new field storage config entity
      $field_storage_config = \Drupal::entityTypeManager()
        ->getStorage('field_storage_config')
        ->create($data);

      $field_storage_config->save();
      \Drupal::logger('du_paragraphs')->notice('Created field storage: @id', ['@id' => $data['id']]);

    }
    catch (\Exception $e) {
      \Drupal::logger('du_paragraphs')->error('Error creating field storage @id: @error', [
        '@id' => $config_id,
        '@error' => $e->getMessage(),
      ]);
      continue;
    }
  }
}

/**
 * Add new field instance configurations.
 */
function du_paragraphs_update_9005() {
  $field_config_ids = array(
    'field.field.paragraph.cta.field_cta_bg_image',
    'field.field.paragraph.hero_media.field_headline',
    'field.field.paragraph.hero_media.field_hero_caption',
    'field.field.paragraph.hero_media.field_hero_embed',
    'field.field.paragraph.hero_media.field_image_type',
    'field.field.paragraph.hero_media.field_subhead',
    'field.field.paragraph.icon_list_item.field_icon_list_description',
    'field.field.paragraph.icon_list_item.field_icon_list_heading',
    'field.field.paragraph.icon_list_item.field_icon_list_image',
    'field.field.paragraph.icon_list_item.field_icon_list_link',
    'field.field.paragraph.inset_video.field_inset_video_youtube_video',
    'field.field.paragraph.unit_hero_media_.field_hero_image',
    'field.field.paragraph.unit_hero_media_.field_hero_video',
    'field.field.paragraph.unit_hero_media_.field_unit_hero_headline',
    'field.field.paragraph.unit_hero_media_.field_unit_hero_link',
    'field.field.paragraph.unit_slide.field_unit_slide_caption',
    'field.field.paragraph.unit_slide.field_unit_slide_image'
  );

  foreach ($field_config_ids as $config_id) {
    try {
      $config_path = \Drupal::service('extension.list.module')->getPath('du_paragraphs') . '/config/install/' . $config_id . '.yml';

      if (!file_exists($config_path)) {
        \Drupal::logger('du_paragraphs')->error('Configuration file not found: @path', ['@path' => $config_path]);
        continue;
      }

      $data = \Symfony\Component\Yaml\Yaml::parseFile($config_path);

      // Check if the field already exists
      $existing_field = \Drupal::entityTypeManager()
        ->getStorage('field_config')
        ->load($data['id']);

      if ($existing_field) {
        \Drupal::logger('du_paragraphs')->notice('Field config already exists: @id', ['@id' => $data['id']]);
        continue;
      }

      // Create a new field config entity
      $field_config = \Drupal::entityTypeManager()
        ->getStorage('field_config')
        ->create($data);

      $field_config->save();
      \Drupal::logger('du_paragraphs')->notice('Created field config: @id', ['@id' => $data['id']]);
    }
    catch (\Exception $e) {
      \Drupal::logger('du_paragraphs')->error('Error creating field config @id: @error', [
        '@id' => $config_id,
        '@error' => $e->getMessage(),
      ]);
      continue;
    }
  }
}

/**
 * Add new form and view display configurations.
 */
function du_paragraphs_update_9006() {
  $display_config_ids = array(
    'core.entity_form_display.paragraph.icon_list_item.default',
    'core.entity_form_display.paragraph.unit_slide.default',
    'core.entity_view_display.paragraph.icon_list_item.default',
    'core.entity_view_display.paragraph.unit_slide.default'
  );

  foreach ($display_config_ids as $config_id) {
    try {
      $config_path = \Drupal::service('extension.list.module')->getPath('du_paragraphs') . '/config/install/' . $config_id . '.yml';

      if (!file_exists($config_path)) {
        \Drupal::logger('du_paragraphs')->error('Configuration file not found: @path', ['@path' => $config_path]);
        continue;
      }

      $data = \Symfony\Component\Yaml\Yaml::parseFile($config_path);

      // Check if the display config already exists
      $existing_display = \Drupal::configFactory()->get($config_id);
      if (!$existing_display->isNew()) {
        \Drupal::logger('du_paragraphs')->notice('Display config already exists: @id', ['@id' => $config_id]);
        continue;
      }

      // Create the new display config
      \Drupal::configFactory()
        ->getEditable($config_id)
        ->setData($data)
        ->save(TRUE);

      \Drupal::logger('du_paragraphs')->notice('Created display config: @id', ['@id' => $config_id]);
    }
    catch (\Exception $e) {
      \Drupal::logger('du_paragraphs')->error('Error creating display config @id: @error', [
        '@id' => $config_id,
        '@error' => $e->getMessage(),
      ]);
      continue;
    }
  }
}

/**
 * Add new image and responsive image style configurations.
 */
function du_paragraphs_update_9007() {
  $style_config_ids = array(
    'image.style.cta_module_narrow_1024_x_281',
    'image.style.cta_module_narrow_1400_x_281',
    'image.style.cta_module_narrow_450_x_281',
    'image.style.cta_module_narrow_767_x_281',
    'image.style.featured_media_image_1200_x_801',
    'image.style.featured_media_image_400_x_287',
    'image.style.featured_media_image_800_x_534',
    'image.style.hero_image_1024_x_406',
    'image.style.hero_image_1125_x_445',
    'image.style.hero_image_1200_x_476',
    'image.style.hero_image_1356_x_538',
    'image.style.hero_image_768_x_304',
    'image.style.icon_list_image',
    'image.style.unit_slide_plain',
    'responsive_image.styles.cta_module_narrow',
    'responsive_image.styles.feature_media_image',
    'responsive_image.styles.hero_image'
  );

  foreach ($style_config_ids as $config_id) {
    try {
      $config_path = \Drupal::service('extension.list.module')->getPath('du_paragraphs') . '/config/install/' . $config_id . '.yml';

      if (!file_exists($config_path)) {
        \Drupal::logger('du_paragraphs')->error('Configuration file not found: @path', ['@path' => $config_path]);
        continue;
      }

      $data = \Symfony\Component\Yaml\Yaml::parseFile($config_path);

      // Check if the style config already exists
      $existing_style = \Drupal::configFactory()->get($config_id);
      if (!$existing_style->isNew()) {
        \Drupal::logger('du_paragraphs')->notice('Style config already exists: @id', ['@id' => $config_id]);
        continue;
      }

      // Create the new style config
      \Drupal::configFactory()
        ->getEditable($config_id)
        ->setData($data)
        ->save(TRUE);

      \Drupal::logger('du_paragraphs')->notice('Created style config: @id', ['@id' => $config_id]);
    }
    catch (\Exception $e) {
      \Drupal::logger('du_paragraphs')->error('Error creating style config @id: @error', [
        '@id' => $config_id,
        '@error' => $e->getMessage(),
      ]);
      continue;
    }
  }
}

/**
 * Add new paragraph type configurations.
 */
function du_paragraphs_update_9008() {
  $paragraph_type_config_ids = array(
    'paragraphs.paragraphs_type.hero_media',
    'paragraphs.paragraphs_type.icon_list_item',
    'paragraphs.paragraphs_type.unit_hero_media_',
    'paragraphs.paragraphs_type.unit_slide'
  );

  foreach ($paragraph_type_config_ids as $config_id) {
    try {
      $config_path = \Drupal::service('extension.list.module')->getPath('du_paragraphs') . '/config/install/' . $config_id . '.yml';

      if (!file_exists($config_path)) {
        \Drupal::logger('du_paragraphs')->error('Configuration file not found: @path', ['@path' => $config_path]);
        continue;
      }

      $data = \Symfony\Component\Yaml\Yaml::parseFile($config_path);

      // Check if the paragraph type config already exists
      $existing_type = \Drupal::configFactory()->get($config_id);
      if (!$existing_type->isNew()) {
        \Drupal::logger('du_paragraphs')->notice('Paragraph type config already exists: @id', ['@id' => $config_id]);
        continue;
      }

      // Create the new paragraph type config
      \Drupal::configFactory()
        ->getEditable($config_id)
        ->setData($data)
        ->save(TRUE);

      \Drupal::logger('du_paragraphs')->notice('Created paragraph type config: @id', ['@id' => $config_id]);
    }
    catch (\Exception $e) {
      \Drupal::logger('du_paragraphs')->error('Error creating paragraph type config @id: @error', [
        '@id' => $config_id,
        '@error' => $e->getMessage(),
      ]);
      continue;
    }
  }
}
